(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{119:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return l}));var a=n(3),r=n(7),o=(n(0),n(194)),i={id:"c-sharp",title:"C# quick start",sidebar_label:"C#"},s={unversionedId:"getting-started/connecting-applications/c-sharp",id:"getting-started/connecting-applications/c-sharp",isDocsHomePage:!1,title:"C# quick start",description:"At the end of this guide, you will have created a simple .NET console Hello, World! program that connects to the Memgraph database and executes simple queries.",source:"@site/docs/getting-started/connecting-applications/c-sharp.md",slug:"/getting-started/connecting-applications/c-sharp",permalink:"/docs/memgraph/getting-started/connecting-applications/c-sharp",editUrl:"https://github.com/memgraph/docs/tree/master/docs/getting-started/connecting-applications/c-sharp.md",version:"current",sidebar_label:"C#",sidebar:"memgraph",previous:{title:"Rust quick start",permalink:"/docs/memgraph/getting-started/connecting-applications/rust"},next:{title:"Java quick start",permalink:"/docs/memgraph/getting-started/connecting-applications/java"}},c=[{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Driver",id:"driver",children:[]},{value:"Basic Setup",id:"basic-setup",children:[]},{value:"Alternative Setup",id:"alternative-setup",children:[]},{value:"Where to next?",id:"where-to-next",children:[]},{value:"Getting help",id:"getting-help",children:[]}],p={toc:c};function l(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.a)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(o.a)("p",null,"At the end of this guide, you will have created a simple .NET console ",Object(o.a)("strong",{parentName:"p"},Object(o.a)("inlineCode",{parentName:"strong"},"Hello, World!"))," program that connects to the Memgraph database and executes simple queries."),Object(o.a)("h2",{id:"prerequisites"},"Prerequisites"),Object(o.a)("p",null,"For this guide you will need:"),Object(o.a)("ul",null,Object(o.a)("li",{parentName:"ul"},"A ",Object(o.a)("strong",{parentName:"li"},"running Memgraph instance"),". If you need to setup Memgraph, take a look at the ",Object(o.a)("a",{parentName:"li",href:"../installation"},"Installation guide"),"."),Object(o.a)("li",{parentName:"ul"},"A basic understanding of graph databases and the property graph model.")),Object(o.a)("h2",{id:"driver"},"Driver"),Object(o.a)("p",null,"Please note that the code samples in this guide utilize the ",Object(o.a)("inlineCode",{parentName:"p"},"Neo4j.Driver.Simple")," package which implements a blocking interface around the 'main' driver. It should be used as a tool for getting started quickly. The ",Object(o.a)("inlineCode",{parentName:"p"},"Neo4j.Driver")," package contains the official and complete driver for real-world projects.\nThe driver documentation can be found here: ",Object(o.a)("a",{parentName:"p",href:"https://github.com/neo4j/neo4j-dotnet-driver"},"Neo4j .NET Driver"),"."),Object(o.a)("h2",{id:"basic-setup"},"Basic Setup"),Object(o.a)("p",null,"We'll be using Visual Studio 2019 on Windows 10 to connect a simple .NET console application to a running Memgraph instance.\nIf you're using a different IDE, the steps might be slightly different, but the code is probably the same or very similar.",Object(o.a)("br",null),"  "),Object(o.a)("p",null,"Let's jump in and connect a simple program to Memgraph."),Object(o.a)("p",null,Object(o.a)("strong",{parentName:"p"},"1.")," Open ",Object(o.a)("strong",{parentName:"p"},"Visual Studio")," and create a new project.",Object(o.a)("br",null),Object(o.a)("br",{parentName:"p"}),"\n",Object(o.a)("strong",{parentName:"p"},"2.")," Find and select the ",Object(o.a)("strong",{parentName:"p"},"Console App (.NET Core)")," template by using the search box.",Object(o.a)("br",null),Object(o.a)("br",{parentName:"p"}),"\n",Object(o.a)("strong",{parentName:"p"},"3.")," Name your project ",Object(o.a)("strong",{parentName:"p"},Object(o.a)("em",{parentName:"strong"},"MemgraphApp")),", choose an appropriate location for it, and click ",Object(o.a)("strong",{parentName:"p"},"Create"),".",Object(o.a)("br",null),Object(o.a)("br",{parentName:"p"}),"\n",Object(o.a)("strong",{parentName:"p"},"4.")," Select the ",Object(o.a)("strong",{parentName:"p"},"Tools > NuGet Package Manager > Package Manager Console")," menu command.",Object(o.a)("br",null),Object(o.a)("br",{parentName:"p"}),"\n",Object(o.a)("strong",{parentName:"p"},"5.")," Once the console opens, check that the ",Object(o.a)("strong",{parentName:"p"},"Default project")," drop-down list shows the project into which you want to install the package.\nIf you have a single project in the solution, it is already selected.",Object(o.a)("br",null),Object(o.a)("br",{parentName:"p"}),"\n",Object(o.a)("strong",{parentName:"p"},"6.")," Enter the command ",Object(o.a)("strong",{parentName:"p"},"Install-Package Neo4j.Driver.Simple"),"."),Object(o.a)("p",null,"Now, you should have the newest version of the driver installed and can proceed to copy the following code into the ",Object(o.a)("strong",{parentName:"p"},"Program.cs")," file."),Object(o.a)("pre",null,Object(o.a)("code",{parentName:"pre",className:"language-c#"},'using System;\nusing System.Linq;\nusing Neo4j.Driver;\n\nnamespace MemgraphApp\n{\n    public class Program\n    {\n        public static void Main()\n        {\n            string message = "Hello, World!";\n\n            using var _driver = GraphDatabase.Driver("bolt://localhost:7687", AuthTokens.None);\n            using var session = _driver.Session();\n\n            var greeting = session.WriteTransaction(tx =>\n            {\n                var result = tx.Run("CREATE (n:FirstNode) " +\n                                    "SET n.message = $message " +\n                                    "RETURN \'Node \'  + id(n) + \': \' + n.message",\n                    new { message });\n                return result.Single()[0].As<string>();\n            });\n            Console.WriteLine(greeting);\n        }\n    }\n}\n')),Object(o.a)("p",null,"Once you run the program, you should see an output similar to the following:"),Object(o.a)("pre",null,Object(o.a)("code",{parentName:"pre"},"Node 1: Hello, World!\n")),Object(o.a)("h2",{id:"alternative-setup"},"Alternative Setup"),Object(o.a)("p",null,"If you want to try out more complex operations, feel free to use the refactored code below."),Object(o.a)("pre",null,Object(o.a)("code",{parentName:"pre",className:"language-c#"},'using System;\nusing System.Linq;\nusing Neo4j.Driver;\n\nnamespace MemgraphApp\n{\n    public class Program : IDisposable\n    {\n        private readonly IDriver _driver;\n\n        public Program(string uri, string user, string password)\n        {\n            _driver = GraphDatabase.Driver(uri, AuthTokens.Basic(user, password));\n        }\n\n        public void PrintGreeting(string message)\n        {\n            using (var session = _driver.Session())\n            {\n                var greeting = session.WriteTransaction(tx =>\n                {\n                    var result = tx.Run("CREATE (n:FirstNode) " +\n                                        "SET n.message = $message " +\n                                        "RETURN \'Node \'  + id(n) + \': \' + n.message",\n                        new { message });\n                    return result.Single()[0].As<string>();\n                });\n                Console.WriteLine(greeting);\n            }\n        }\n\n        public void Dispose()\n        {\n            _driver?.Dispose();\n        }\n\n        public static void Main()\n        {\n            using (var greeter = new Program("bolt://localhost:7687", "", ""))\n            {\n                greeter.PrintGreeting("Hello, World!");\n            }\n        }\n    }\n}\n')),Object(o.a)("h2",{id:"where-to-next"},"Where to next?"),Object(o.a)("p",null,"For real-world examples of how to use Memgraph, we suggest you take a look at the ",Object(o.a)("strong",{parentName:"p"},Object(o.a)("a",{parentName:"strong",href:"/docs/memgraph/tutorials/tutorials"},"Tutorials"))," page.\nYou can also browse through the ",Object(o.a)("strong",{parentName:"p"},Object(o.a)("a",{parentName:"strong",href:"../../database-functionalities"},"Database functionalities"))," section to get an overview of all the functionalities Memgraph offers."),Object(o.a)("h2",{id:"getting-help"},"Getting help"),Object(o.a)("p",null,"Visit the ",Object(o.a)("strong",{parentName:"p"},Object(o.a)("a",{parentName:"strong",href:"/docs/memgraph/getting-help/getting-help"},"Getting help"))," page in case you run into any kind of problem or you have additional questions."))}l.isMDXComponent=!0},194:function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),l=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},g=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),g=l(n),d=a,m=g["".concat(i,".").concat(d)]||g[d]||u[d]||o;return n?r.a.createElement(m,s(s({ref:t},p),{},{components:n})):r.a.createElement(m,s({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=g;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}g.displayName="MDXCreateElement"}}]);